@model ReadySetResource.Areas.Apps.ViewModels.Dashboard.SettingsViewModel
@{
    ViewBag.Title = "Business Settings";
    Layout = "~/Areas/Apps/Views/Shared/_Layout.cshtml";
}

<h2>Account Settings</h2>

@Model.ErrorMessage

@using (Html.BeginForm("UpdateSettings", "Dashboard"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="col-md-6 animated fadeInUp" style="animation-duration:1s">
        <h3>Basic Details</h3>
        <div class="form-group">
            @Html.LabelFor(m => m.User.Title)
            @Html.DropDownListFor(m => m.User.Title, Model.TitleOptions)
            @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control" })
            @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.Title)
            @Html.ValidationMessageFor(m => m.User.FirstName)
            @Html.ValidationMessageFor(m => m.User.LastName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TempBirthDate)
            @Html.EditorFor(m => m.TempBirthDate, new { date = Model.TempBirthDate })
            @Html.ValidationMessageFor(m => m.User.DateOfBirth)
        </div>
        <div>
            <a href="#" id="dnperm" class="btn btn-default">Enable Desktop Notifications</a>
            <a href="#" id="dntrigger" class="btn btn-warning">Test</a>
            <script>
                var dnperm = document.getElementById('dnperm');
                var dntrigger = document.getElementById('dntrigger');

                dnperm.addEventListener('click', function (e) {
                    e.preventDefault();

                    if (!window.Notification) {
                        alert('Notifications are not supported');
                    }
                    else {
                        Notification.requestPermission(function (p) {
                            if (p === 'denied') {
                                alert('You have denied notifications');
                            }
                            else if (p === 'granted') {
                                alert('You have accepted notifications');
                            }
                                
                        });
                    }
                });


                dntrigger.addEventListener('click', function (e) {
                    var notify;

                    e.preventDefault();

                    if (Notification.permission === 'default') {
                        alert('Please allow notifications');
                    } else {
                        notify = new Notification('Test from ReadySetResource', {
                            body: 'Let\'s go back home!',
                            icon: '../../../../Content/Images/home/logo.png'
                        });

                        notify.onclick = function () {
                            window.location = '/Apps/Dashboard';
                            notify.close();
                        }
                    }

                });

            </script>
        </div>
        <div>
            To change your password, please log out, and click 'Forgot password?' when logging in.
        </div>

        @Html.HiddenFor(m => m.User.AccessFailedCount)
        @Html.HiddenFor(m => m.User.AddressLine1)
        @Html.HiddenFor(m => m.User.AddressLine2)
        @Html.HiddenFor(m => m.User.BackupEmail)
        @Html.HiddenFor(m => m.User.Blocked)
        @Html.HiddenFor(m => m.User.Email)
        @Html.HiddenFor(m => m.User.BusinessUserType)
        @Html.HiddenFor(m => m.User.BusinessUserTypeId)
        @Html.HiddenFor(m => m.User.Claims)
        @Html.HiddenFor(m => m.User.EmailConfirmed)
        @Html.HiddenFor(m => m.User.EmergencyContact)
        @Html.HiddenFor(m => m.User.EmployeeType)
        @Html.HiddenFor(m => m.User.EmployeeTypeId)
        @Html.HiddenFor(m => m.User.Id)
        @Html.HiddenFor(m => m.User.LockoutEnabled)
        @Html.HiddenFor(m => m.User.LockoutEndDateUtc)
        @Html.HiddenFor(m => m.User.Logins)
        @Html.HiddenFor(m => m.User.TimesLoggedIn)
        @Html.HiddenFor(m => m.User.TwoFactorEnabled)
        @Html.HiddenFor(m => m.User.UserName)


        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Update Details</button>
    </div>
}


@*Generating client side validation*@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

}
