@model ReadySetResource.ViewModels.CalendarViewModel
@{
    ViewBag.Title = "Calendar";
    Layout = "~/Areas/Apps/Views/Shared/_CalendarLayout.cshtml";
    string currDay;
}



@if (Model.AccessType.AccessType == "E")
{
    string GetDaySuffix(int dayPassedIn)
    {
        switch (dayPassedIn)
        {
            case 1:
            case 21:
            case 31:
                return dayPassedIn.ToString() + "st";
            case 2:
            case 22:
                return dayPassedIn.ToString() + "nd";
            case 3:
            case 23:
                return dayPassedIn.ToString() + "rd";
            default:
                return dayPassedIn.ToString() + "th";
        }
    }

    <h2>


        <div style="text-align:center;">
            @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(0).Day); }
            @currDay of @Model.ActiveWeekCommenceDate.ToString("MMM")
            <i class="glyphicon glyphicon-arrow-right" style="color:#428bca;font-size:18pt;"></i>
            @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(6).Day); }
            @currDay of @Model.ActiveWeekCommenceDate.AddDays(6).ToString("MMM")

            <a href="@Url.Action("Index", "Calendar", new { week = (Model.ActiveWeekCommenceDate.AddDays(-7).Date) })" style="width:40px; float:left;">
                <i class="glyphicon glyphicon-circle-arrow-left" style="color:#428bca"></i>
            </a>

            <a href="@Url.Action("Index", "Calendar", new { week = (Model.ActiveWeekCommenceDate.AddDays(7).Date) })" style="width:40px; float:right;">
                <i class="glyphicon glyphicon-circle-arrow-right" style="color:#428bca"></i>
            </a>
        </div>
    </h2>
}
else if (Model.AccessType.AccessType == "V")
{
    <h2>
        @Model.ActiveWeekCommenceDate.Day/@Model.ActiveWeekCommenceDate.Month to @Model.ActiveWeekCommenceDate.AddDays(6).Day/@Model.ActiveWeekCommenceDate.AddDays(6).Month
    </h2>

}
else
{
    Response.Redirect(Url.Action("NotAuthorised", "Dashboard", new { Uri = HttpContext.Current.Request.Url.AbsolutePath }));
}


@if (Model.Employees.Count() == 0)
{
    <text>You have no employees!</text>
}
else if (Model.Shifts.Count() == 0 | Model.Shifts == null)
{
    <text>You have no shifts for this week!</text>
}
else
{

    string GetDaySuffix(int dayPassedIn)
    {
        switch (dayPassedIn)
        {
            case 1:
            case 21:
            case 31:
                return dayPassedIn.ToString() + "st";
            case 2:
            case 22:
                return dayPassedIn.ToString() + "nd";
            case 3:
            case 23:
                return dayPassedIn.ToString() + "rd";
            default:
                return dayPassedIn.ToString() + "th";
        }
    }


    <table id="rota">
        <thead>
            <tr>
                <th rowspan="2">Employee</th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(0).Day); }
                <th colspan="2">Mon - @currDay </th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(1).Day); }
                <th colspan="2">Tue - @currDay </th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(2).Day); }
                <th colspan="2">Wed - @currDay </th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(3).Day); }
                <th colspan="2">Thu - @currDay </th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(4).Day); }
                <th colspan="2">Fri - @currDay </th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(5).Day); }
                <th colspan="2">Sat - @currDay </th>
                @{ currDay = GetDaySuffix(Model.ActiveWeekCommenceDate.AddDays(6).Day); }
                <th colspan="2">Sun - @currDay </th>
                <th rowspan="2">Totals</th>
            </tr>
            <tr>
                <th>Start</th>
                <th>End</th>
                <th>Start</th>
                <th>End</th>
                <th>Start</th>
                <th>End</th>
                <th>Start</th>
                <th>End</th>
                <th>Start</th>
                <th>End</th>
                <th>Start</th>
                <th>End</th>
                <th>Start</th>
                <th>End</th>
            </tr>
        </thead>
        <tbody>
            @{
                double totalHours = 0;

                List<double> dailyHours = new List<double>();
                for (int i = 0; i < 7; i++)
                {
                    dailyHours.Add(0);
                }
                int day = 0;

            }

            @foreach (var employee in Model.Employees)
            {
                int dayOfWeek = 0;

                <tr>

                    <td align="left" style=" white-space: nowrap;table-layout:fixed;">
                        <a href="@Url.Action("MyCharts", "Calendar", new { user = employee.Id, week = Model.ActiveWeekCommenceDate })">
                            @employee.FirstName @employee.LastName
                        </a>
                    </td>


                    @{
                        var empShifts = Model.Shifts;
                        int currEmpIndex = Model.Employees.IndexOf(employee);
                        int prevEmpIndex = Model.Employees.IndexOf(employee) - 1;
                        int currMinElement = (prevEmpIndex * 7) + 7;
                        empShifts = Model.Shifts.ToList().GetRange(currMinElement, 7);
                        double totalEmployeeHours = 0;

                    }

                    @foreach (var empShift in empShifts)
                    {
                        if (Model.AccessType.AccessType == "V")
                        {
                            if (empShift == null)
                            {
                                <td></td>
                                <td></td>
                            }
                            else if (empShift.UserId == employee.Id)
                            {

                                totalHours += (empShift.EndDateTime - empShift.StartDateTime).TotalHours;
                                totalEmployeeHours += (empShift.EndDateTime - empShift.StartDateTime).TotalHours;
                                if (empShift.EndDateTime.DayOfWeek.ToString() == "Monday") { day = 0; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Tuesday") { day = 1; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Wednesday") { day = 2; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Thursday") { day = 3; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Friday") { day = 4; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Saturday") { day = 5; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Sunday") { day = 6; }

                                dailyHours[day] = dailyHours[day] + (empShift.EndDateTime - empShift.StartDateTime).TotalHours;

                                <td style="white-space: nowrap;">
                                    @empShift.StartDateTime.Hour :
                                    @if (empShift.StartDateTime.Minute < 10)
                                    {<text>0</text>@empShift.StartDateTime.Minute }
                                else
                                { @empShift.StartDateTime.Minute}
                                </td>
                                <td style="white-space: nowrap;">
                                    @empShift.EndDateTime.Hour :
                                    @if (empShift.EndDateTime.Minute < 10)
                                    {<text>0</text>@empShift.EndDateTime.Minute }
                                else
                                { @empShift.EndDateTime.Minute}
                                </td>
                            }
                        }
                        else if (Model.AccessType.AccessType == "E")
                        {
                            if (empShift == null)
                            {
                                <td colspan="2"><a href="@Url.Action("Add","Calendar", new { emp = employee.Id, date = Model.ActiveWeekCommenceDate.AddDays(dayOfWeek) })">+</a></td>
                            }
                            else if (empShift.UserId == employee.Id)
                            {

                                totalHours += (empShift.EndDateTime - empShift.StartDateTime).TotalHours;
                                totalEmployeeHours += (empShift.EndDateTime - empShift.StartDateTime).TotalHours;
                                if (empShift.EndDateTime.DayOfWeek.ToString() == "Monday") { day = 0; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Tuesday") { day = 1; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Wednesday") { day = 2; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Thursday") { day = 3; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Friday") { day = 4; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Saturday") { day = 5; }
                                else if (empShift.EndDateTime.DayOfWeek.ToString() == "Sunday") { day = 6; }

                                dailyHours[day] = dailyHours[day] + (empShift.EndDateTime - empShift.StartDateTime).TotalHours;

                                <td style="white-space: nowrap;">
                                    <a href="@Url.Action("Edit","Calendar", new { shift = empShift.Id } )">
                                        <div style="height:100%;width:100%">
                                            @empShift.StartDateTime.Hour :
                                            @if (empShift.StartDateTime.Minute < 10)
                                            {<text>0</text>@empShift.StartDateTime.Minute }
                                        else
                                        { @empShift.StartDateTime.Minute}
                                        </div>
                                    </a>
                                </td>
                                <td style="white-space: nowrap;">
                                    <a href="@Url.Action("Edit","Calendar", new { shift = empShift.Id } )">
                                        <div style="height:100%;width:100%">
                                            @empShift.EndDateTime.Hour :
                                            @if (empShift.EndDateTime.Minute < 10)
                                            {<text>0</text>@empShift.EndDateTime.Minute }
                                        else
                                        { @empShift.EndDateTime.Minute}
                                        </div>
                                    </a>
                                </td>
                            }
                        }
                        else
                        {

                        }

                        dayOfWeek += 1;
                    }
                    <td>
                        @Math.Round(totalEmployeeHours, 1)
                    </td>
                </tr>

            }





        </tbody>
        <tfoot>
            <tr style="color:black">
                <td>Totals</td>
                @foreach (var dailyTotal in dailyHours)
                {
                    <td colspan="2">@Math.Round(@dailyTotal, 1)</td>
                }


                <td>@Math.Round(totalHours, 1)</td>

            </tr>
        </tfoot>

    </table>
}