@model ReadySetResource.Areas.Apps.ViewModels.Dashboard.SettingsViewModel
@{
    ViewBag.Title = "Account Details";
    Layout = "~/Areas/Apps/Views/Shared/_Layout.cshtml";
}

<script>
    function growDiv() {
        var growDiv = document.getElementById('grow');
        if (growDiv.clientHeight) {
            growDiv.style.height = 0;
        } else {
            var wrapper = document.querySelector('.measuringWrapper');
            growDiv.style.height = wrapper.clientHeight + "px";
        }
        document.getElementById("more-button").value = document.getElementById("more-button").value == 'Read more' ? 'Read less' : 'Read more';
    }
</script>


<style>
    #more-button {
        border-style: none;
        background: none;
        font: 16px Serif;
        color: blue;
        margin: 0 0 10px 0;
    }

    #grow input:checked {
        color: red;
    }

    #more-button:hover {
        color: black;
    }

    #grow {
        -moz-transition: height .5s;
        -ms-transition: height .5s;
        -o-transition: height .5s;
        -webkit-transition: height .5s;
        transition: height .5s;
        height: 0;
        overflow: hidden;
    }
</style>

@Model.ErrorMessage



<br>

<div class="col-md-3 animated fadeInUp" style="animation-duration:1s; text-align:center;">
    <img src='@string.Format("/Content/Images/avitars/{0}.png", Model.User.Avitar)' alt="@Model.User.FirstName" style=" padding-top:20px; padding-bottom:10px; height: 235px; display:block; margin-left:auto; margin-right:auto;">
    <input type="button" onclick="growDiv()" value="Change Avitar" class="btn btn-default" style="width:200px;">
    <div id="grow">
        <div class='measuringWrapper'>
            <div class="text">
                <p style="padding-top:4px;">
                    @Html.ActionLink("Male", "SelectAvitar", "MyAccount", new { gender = "M" }, new { @class = "btn btn-primary", style = "width:98px;" })
                    @Html.ActionLink("Female", "SelectAvitar", "MyAccount", new { gender = "F" }, new { @class = "btn btn-primary", style = "width:98px;" })
                </p>
            </div>
        </div>
    </div>
</div>


@using (Html.BeginForm("UpdateSettings", "MyAccount"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="col-md-9 animated fadeInUp" style="animation-duration:1s; height:100%; padding-top:40px;">

        <div class="form-inline">
            @Html.LabelFor(m => m.User.Title, new { style = "font-size:large;" })
            <br>
            @Html.DropDownListFor(m => m.User.Title, Model.TitleOptions, new { @class = "form-control", style = "width:75px;" })
            @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control", style = "width:100px;" })
            @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control", style = "width:100px;" })
            @Html.ValidationMessageFor(m => m.User.Title)
            @Html.ValidationMessageFor(m => m.User.FirstName)
            @Html.ValidationMessageFor(m => m.User.LastName)
        </div>
        <br>
        <div class="form-group">
            @Html.LabelFor(m => m.TempBirthDate, new { style = "font-size:large;" })
            <br>
            @Html.EditorFor(m => m.TempBirthDate, new { date = Model.TempBirthDate, @class = "form-control datepicker2" })
            @Html.ValidationMessageFor(m => m.User.DateOfBirth)
        </div>



        @Html.HiddenFor(m => m.User.AccessFailedCount)
        @Html.HiddenFor(m => m.User.AddressLine1)
        @Html.HiddenFor(m => m.User.AddressLine2)
        @Html.HiddenFor(m => m.User.BackupEmail)
        @Html.HiddenFor(m => m.User.Blocked)
        @Html.HiddenFor(m => m.User.Email)
        @Html.HiddenFor(m => m.User.BusinessUserType)
        @Html.HiddenFor(m => m.User.BusinessUserTypeId)
        @Html.HiddenFor(m => m.User.Claims)
        @Html.HiddenFor(m => m.User.EmailConfirmed)
        @Html.HiddenFor(m => m.User.EmergencyContact)
        @Html.HiddenFor(m => m.User.EmployeeType)
        @Html.HiddenFor(m => m.User.EmployeeTypeId)
        @Html.HiddenFor(m => m.User.Id)
        @Html.HiddenFor(m => m.User.LockoutEnabled)
        @Html.HiddenFor(m => m.User.LockoutEndDateUtc)
        @Html.HiddenFor(m => m.User.Logins)
        @Html.HiddenFor(m => m.User.TimesLoggedIn)
        @Html.HiddenFor(m => m.User.TwoFactorEnabled)
        @Html.HiddenFor(m => m.User.UserName)


        @Html.AntiForgeryToken()

        <br><br>
        <button type="submit" class="btn btn-primary" style="position:fixed; bottom:0px; right:0px;">Save</button>
    </div>
}


            
@* SECTION COMMENTED BECAUSE IT HAS ERRORS
<div>
<a href="#" id="dnperm" class="btn btn-default">Enable Desktop Notifications</a>
<a href="#" id="dntrigger" class="btn btn-warning">Test</a>
<script>
    var dnperm = document.getElementById('dnperm');
    var dntrigger = document.getElementById('dntrigger');

    dnperm.addEventListener('click', function (e) {
        e.preventDefault();

        if (!window.Notification) {
            alert('Notifications are not supported');
        }
        else {
            Notification.requestPermission(function (p) {
                if (p === 'denied') {
                    alert('You have denied notifications');
                }
                else if (p === 'granted') {
                    alert('You have accepted notifications');
                }

            });
        }
    });


    dntrigger.addEventListener('click', function (e) {
        var notify;

        e.preventDefault();

        if (Notification.permission === 'default') {
            alert('Please allow notifications');
        } else {
            notify = new Notification('Test from ReadySetResource', {
                body: 'Let\'s go back home!',
                icon: '../../../../Content/Images/home/logo.png'
            });

            notify.onclick = function () {
                window.location = '/Apps/Dashboard';
                notify.close();
            }
        }

    });

</script>
</div>
*@

@* SECTION COMMENTED OUT AS IT HAS ERRORS

<div class="col-md-6 animated fadeInUp" style="animation-duration:1s">
<h2>Sync to Google Calendar</h2>
@if (Model.User.GoogleCalendarFilePath == null)
{
    <text>Log In to Google Calendar to sync your shifts</text>
    @Html.ActionLink("Log In", "LogIntoGoogleCalendar", "Calendar", null, new { @class = "btn btn-default" });
}
else
{
    <text>You have enabled Google Calendar sync. Click 'Export' in the calendar app to export your shifts!</text>
}

</div>

*@






@*Generating client side validation*@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

}
